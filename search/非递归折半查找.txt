#include"stdio.h"
#define max 20
int data[max]={12,16,19,22,25,
32,39,48,55,57,
58,63,68,69,70,
78,84,88,90,97};
int count=1;
//折半查找
int b_search(int key)
{
	int left=0,right=max-1,middle;
	while(left<=right)
	{
		middle=(left+right)/2;
		if(key>data[middle])left=middle+1;            //欲查找值较大，查找后半段
		else if(key<data[middle])right=middle-1;      //欲查找值较小，查找前半段
		else if(key==data[middle])                    //相等，结束
		{printf("data[%d]=%d\n",middle,key);return 1;}
		count++;
	}
	return 0;
}
//主程序
int main()
{
	int key;
	printf("Please input the key value:");
	scanf("%d",&key);
	if(b_search(key))
		printf("search time=%d\n",count);
	else printf("no found!!\n");
	return 0;
}



#include"stdio.h"
#include"stdlib.h"
#include"time.h"
#define size 15
//quicksort
void quicksort(int *list,int left,int right)
{
	int l=left,r=right,t;
	while(l<r)
	{
		while(list[l]<list[(left+right)/2])l++;
		while(list[r]>list[(left+right)/2])r--;
		if(l<=r){t=list[l];list[l]=list[r];list[r]=t;l++;r--;}
	}
	if(left<r)quicksort(list,left,r);
	if(l<right)quicksort(list,l,right);
}
//binary_search
int binarysearch(int *list,int n,int data)
{
	int low=0,high=n-1,mid;
	while(low<=high)
	{
		mid=(low+high)/2;
		if(list[mid]==data)return mid;
		else if(list[mid]>data)high=mid-1;
		else low=mid+1;
	}
	return -1;
}
//main
void main()
{
	int list[size],i;
	srand(time(0));
	for(i=0;i<size;i++)
		list[i]=rand()%100+10;
	printf("source list:");
	for(i=0;i<size;i++)
		printf("[%d]",list[i]);
	printf("\n\n");
	printf("sorting result:");
	quicksort(list,0,size-1);
	for(i=0;i<size;i++)
		printf("[%d]",list[i]);
	printf("\n");
	int key,f;
	printf("Please input the key you find:");
	scanf("%d",&key);
	f=binarysearch(list,size,key);
	if(f<0)printf("No found the key!\n");
	else printf("find the key:list[%d]=%d\n",f,key);
}