#include"stdio.h"
/*二叉树结点*/
struct tree
{
	int left;
	int data;
	int right;
};
typedef struct tree bitreenode;
bitreenode b_tree[15];
/*建立二叉树*/
void create_bitree(bitreenode *b_tree,int *nodelist,int len)
{
	int i,level,position;
	b_tree[0].data=nodelist[0];
	for(i=1;i<len;i++)
	{
		b_tree[i].data=nodelist[i];
		level=0;
		position=0;
		while(position==0)
		{
			if(nodelist[i]>b_tree[level].data)
				if(b_tree[level].right!=-1)
					level=b_tree[level].right;
				else
					position=-1;
			else
				if(b_tree[level].left!=-1)
					level=b_tree[level].left;
				else
					position=1;
		}
		if(position==1)
			b_tree[level].left=i;
		else
			b_tree[level].right=i;
	}
}
/*主程序*/
void main()
{
	int i,index,data;
	int nodelist[16];
	index=0;
	printf("input the elements of binary tree(exit for 0):\n");
	scanf("%d",&data);
	while(data!=0)
	{
		nodelist[index]=data;
		index++;
		scanf("%d",&data);
	}
	for(i=0;i<15;i++)
	{
		b_tree[i].data=0;
		b_tree[i].left=-1;
		b_tree[i].right=-1;
	}
	create_bitree(b_tree,nodelist,index);
	printf("The binary tree content:\n");
	printf("     left    data    right    \n");
	printf("================================\n");
	for(i=0;i<15;i++)
	{
		if(b_tree[i].data!=0)
			 printf("%2d:  [%2d]    [%2d]    [%2d]   \n",i,b_tree[i].left,b_tree[i].data,
		b_tree[i].right);
	}
}